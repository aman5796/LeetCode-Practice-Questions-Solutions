class Solution{
    public:
    /*You are required to complete this method */
    int findMaxDiff(int A[], int n)
    {
      //Your code here
      vector<int> ls(n,0);
      vector<int> rs(n,0);
      stack<int> st;
      for(int i=0;i<n;i++) {
          while(!st.empty() && st.top()>=A[i]) {
              st.pop();
          }
          if(st.empty()) {
              ls[i] = 0;
          }
          else {
              ls[i] = st.top();
          }
          st.push(A[i]);
      }
      while(!st.empty()) {
          st.pop();
      }
      for(int i=n-1;i>=0;i--) {
          while(!st.empty() && st.top()>=A[i]) {
              st.pop();
          }
          if(st.empty()) {
              rs[i] = 0;
          }
          else {
              rs[i] = st.top();
          }
          st.push(A[i]);
      }
      int ans = INT_MIN;
      for(int i=0;i<n;i++) {
          ans = max(ans,abs(ls[i]-rs[i]));
      }
      return ans;
    }
};