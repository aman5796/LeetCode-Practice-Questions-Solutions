/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res;
    int minCameraCover(TreeNode* root) {
        if(root==0) {
            return 0;
        }
        res = 0;
        return ((postorder(root)==0)?1:0)+res;
    }
    
    int postorder(TreeNode* root) {
        if(root==NULL) {
            return 2;
        }
        int leftRes = postorder(root->left);
        int rightRes = postorder(root->right);
        if(leftRes==0 || rightRes==0) {
            res++;
            return 1;
        }
        return (leftRes==1 || rightRes==1) ? 2 : 0;
    }
};