/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root!=NULL) {
            if(root->val>key) {
                root->left = deleteNode(root->left,key);
            }
            else if(root->val<key) {
                root->right = deleteNode(root->right, key);
            }
            else {
                if(root->left==NULL && root->right==NULL) {
                    return NULL;
                }
                else if(root->left==NULL || root->right==NULL) {
                    return (root->left!=NULL)?root->left:root->right;
                }
                else {
                    TreeNode* successor = root->right;
                    while(successor->left!=NULL) {
                        successor = successor->left;
                    }
                    root->val = successor->val;
                    root->right = deleteNode(root->right, successor->val);
                }
            }
        }
        return root;
    }
};