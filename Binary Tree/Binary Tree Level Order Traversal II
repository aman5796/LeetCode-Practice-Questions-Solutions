/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if(root==NULL) {
            return {};
        }
        vector<vector<int>> result;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()) {
            int qSize = q.size();
            for(int i=0;i<qSize;i++) {
                if(i==0) {
                    result.push_back(vector<int>{q.front()->val});
                } else {
                    result.back().push_back(q.front()->val);
                }
                if(q.front()->left!=NULL) {
                    q.push(q.front()->left);
                }
                if(q.front()->right!=NULL) {
                    q.push(q.front()->right);
                }
                q.pop();
            }
        }
        reverse(result.begin(), result.end());
        return result;
    }
};