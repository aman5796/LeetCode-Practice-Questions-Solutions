/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> res;
    vector<string> binaryTreePaths(TreeNode* root) {
        inorder(root,"");
        return res;
    }
    
    void inorder(TreeNode* root, string str) {
        if(root==NULL) {
            return;
        }
        str += (str.length()==0)?to_string(root->val):"->"+to_string(root->val);
        if(root->left==NULL && root->right==NULL) {
            res.push_back(str);
        }
        inorder(root->left, str);
        inorder(root->right, str);
    }
};