/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> res;
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        if(root==NULL) {
            return {};
        }
        vector<int> arr;
        dfs(root,arr,targetSum);
        return res;
    }
    
    void dfs(TreeNode* root, vector<int>& arr, int sum) {
        if(root!=NULL) {
            arr.push_back(root->val);
            if(sum-root->val==0 && root->left==NULL && root->right==NULL) {
                res.push_back(arr);
            }
            else {
                dfs(root->left,arr,sum-arr.back());
                dfs(root->right,arr,sum-arr.back());
            }
            arr.pop_back();
        }
    }
};