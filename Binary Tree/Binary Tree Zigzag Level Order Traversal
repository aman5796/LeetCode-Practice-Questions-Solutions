/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root==NULL) {
            return {};
        }
        stack<TreeNode*> lToR, rToL;
        lToR.push(root);
        vector<int> row;
        while(!lToR.empty() || !rToL.empty()) {
            row.clear();
            if(!lToR.empty()) {
                while(!lToR.empty()) {
                    row.push_back(lToR.top()->val);
                    if(lToR.top()->left!=NULL) {
                        rToL.push(lToR.top()->left);
                    }
                    if(lToR.top()->right!=NULL) {
                        rToL.push(lToR.top()->right);
                    }
                    lToR.pop();
                }
            }
            res.push_back(row);
            row.clear();
            if(!rToL.empty()) {
                while(!rToL.empty()) {
                    row.push_back(rToL.top()->val);
                    if(rToL.top()->right!=NULL) {
                        lToR.push(rToL.top()->right);
                    }
                    if(rToL.top()->left!=NULL) {
                        lToR.push(rToL.top()->left);
                    }
                    rToL.pop();
                }
                res.push_back(row);
            }
        }
        return res;
    }
};