/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int leftSubTreeNodes, rightSubTreeNodes;
    
    bool btreeGameWinningMove(TreeNode* root, int n, int x) {
        if(root==NULL) {
            return false;
        }
        numNodes(root,x);
        return (max(max(leftSubTreeNodes, rightSubTreeNodes), n-leftSubTreeNodes-rightSubTreeNodes-1)>(n/2)?true:false);
    }
    
    int numNodes(TreeNode* root, int x) {
        if(root==NULL) {
            return 0;
        }
        int l = numNodes(root->left, x);
        int r = numNodes(root->right, x);
        if(root->val==x) {
            leftSubTreeNodes = l;
            rightSubTreeNodes = r;
        }
        return l+r+1;
    }
};