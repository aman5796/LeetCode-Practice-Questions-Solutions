class Solution {
public:
    int minSteps(int n) {
        if(n<=1) return 0;
        vector<vector<int>> dp(2002,vector<int>(2002,0));
        return 1+minStepsReq(n,1,1,dp);
    }
    
    int minStepsReq(int n, int num, int copied, vector<vector<int>>& dp) {
        if(num>n) {
            return n+1;
        }
        if(num==n) return 0;
        if(dp[num][copied] != 0) return dp[num][copied];
        int pasteOption = 1+minStepsReq(n,num+copied,copied,dp);
        int copyOption = (num!=copied)?1+minStepsReq(n,num,num,dp):0;
        if(copyOption!=0) {
            return dp[num][copied] = (copyOption<pasteOption) ? copyOption : pasteOption;
        } else {
            return dp[num][copied] = pasteOption;
        }
        return n;
    }
};