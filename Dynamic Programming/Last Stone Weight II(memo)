class Solution {
public:
    int lastStoneWeightII(vector<int>& stones) {
        int totalSum = accumulate(stones.begin(),stones.end(),0);
        vector<vector<int>> dp(stones.size()+1,vector<int>((2*totalSum+1),-1));
        return minWeight(stones,0,0,dp);
    }
    
    int minWeight(vector<int>& arr, int index, int sum, vector<vector<int>>& dp) {
        if(index==arr.size()) {
            return (sum>=0)?sum:INT_MAX;
        }
        if(dp[index][(dp[0].size()/2)+sum] != -1) {
            return dp[index][(dp[0].size()/2)+sum];
        }
        return dp[index][(dp[0].size()/2)+sum] = min(minWeight(arr,index+1,sum+arr[index],dp),minWeight(arr,index+1,sum-arr[index],dp));
    }
};