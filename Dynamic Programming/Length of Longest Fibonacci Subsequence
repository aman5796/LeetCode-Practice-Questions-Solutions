class Solution {
public:
    int lenLongestFibSubseq(vector<int>& arr) {
        int n = arr.size(), ans = 0;
        vector<vector<int>> dp(n,vector<int>(n,2));
        unordered_map<int,int> mp;
        for(int i=0;i<n;i++) {
            mp[arr[i]] = i;
        }
        for(int r=1;r<n;r++) {
            for(int l=0;l<r;l++) {
                int diff = arr[r]-arr[l];
                if(mp.find(diff)!=mp.end() && mp[diff]<l) {
                    dp[l][r] = max(dp[l][r], dp[mp[diff]][l]+1);
                }
                ans = max(ans,dp[l][r]);
            }
        }
        return ans>2?ans:0;
    }
};