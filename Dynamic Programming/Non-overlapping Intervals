class Solution {
public:
    
    static bool cmp(vector<int>& a, vector<int>& b) {
        if(a[0]==b[0]) {
            return a[1]>b[1];
        }
        return a[0]<b[0];
    }
    
    int eraseOverlapIntervals(vector<vector<int>>& arr) {
        sort(arr.begin(),arr.end(),cmp);
        int n = arr.size();
        int lisLen=0,prev=0;
        vector<int> dp(n+1,INT_MAX);
        dp[0]=INT_MIN;
        for(int i=0;i<n;i++) {
            if(i!=0 && arr[i][0]<arr[prev][1] && arr[i][1]>=arr[prev][1]){
                continue;
            }
            int val = arr[i][1];
            int idx = upper_bound(dp.begin(),dp.end(),val)-dp.begin();
            dp[idx]=val;
            lisLen=max(lisLen,idx);
            prev=i;
        }
        return n-lisLen;
    }
};