class Solution {
public:
    int jump(vector<int>& nums) {
        vector<int> dp(nums.size()+1,-1);
        return minJumps(nums,0,dp);
    }
    
    int minJumps(vector<int>& arr, int index, vector<int>& dp) {
        if(index==arr.size()-1) {
            return 0;
        }
        if(dp[index]!=-1) return dp[index];
        int localMin = INT_MAX;
        for(int i=1;i<=arr[index];i++) {
            if(index+i<=arr.size()-1) {
                int jump = 1+minJumps(arr,index+i,dp);
                localMin = min(localMin,jump);
            }
        }
        return dp[index] = (localMin==INT_MAX)?arr.size():localMin;
    }
};