class Solution {
public:
    int cnt = 0;
    bool isSubsequence(string s, string t) {
        return checkSubsequence(s,t);
    }
    
    bool checkSubsequence(string s, string t) {
        if(s=="") return true;
        if(t=="") return false;
        vector<vector<int>> dp(s.length()+1,vector<int>(t.size()+1));
        for(int i=0;i<dp.size();i++) {
            for(int j=0;j<dp[0].size();j++) {
                if(i==0 || j==0) {
                    dp[i][j] = 0;
                }
                else if(s[i-1]==t[j-1]) {
                    dp[i][j] = 1+dp[i-1][j-1];
                }
                else{
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        if(dp[s.length()][t.length()]==s.length()) {
            return true;
        }
        return false;
    }
};