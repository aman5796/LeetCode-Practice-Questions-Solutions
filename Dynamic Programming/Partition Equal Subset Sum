class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int totalSum = accumulate(nums.begin(),nums.end(),0);
        if(totalSum%2==1) return false;
        vector<vector<bool>> dp(nums.size()+1,vector<bool>((totalSum/2)+1,false));
        for(int i=0;i<dp.size();i++) {
            for(int j=0;j<=dp[0].size();j++) {
                if(j==0) {
                    dp[i][j] = true;
                }
                else if(i==0) {
                    dp[i][j] = false;
                }
                else {
                    if(j-nums[i-1]>=0) {
                        dp[i][j] = dp[i-1][j-nums[i-1]]|dp[i-1][j];
                    }
                    else {
                        dp[i][j] = dp[i-1][j];
                    }
                }
            }
        }
        return dp.back().back();
    }
};