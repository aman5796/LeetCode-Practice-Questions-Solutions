class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    vector<int> res;
	    res.clear();
	    queue<int> bfs;
	    vector<int> deg(V,0);
	    for(int i=0;i<V;i++) {
	        for(int j=0;j<adj[i].size();j++) {
	            deg[adj[i][j]]++;
	        }
	    }
	    for(int i=0;i<deg.size();i++) {
	        if(deg[i]==0) {
	            bfs.push(i);
	        }
	    }
	    while(!bfs.empty()) {
	        int front = bfs.front();
	        bfs.pop();
	        res.push_back(front);
	        for(int i=0;i<adj[front].size();i++) {
	            deg[adj[front][i]]--;
	            if(deg[adj[front][i]]==0) {
	                bfs.push(adj[front][i]);
	            }
	        }
	    }
	    return res;
	}
};