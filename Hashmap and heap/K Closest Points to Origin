class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<float,int>> pq;
        vector<vector<int>> ans;
        for(int i=0;i<points.size();i++) {
            float dis = sqrt(pow(points[i][0],2)+pow(points[i][1],2));
            pq.push({dis,i});
        }
        while(pq.size()>k) {
            pq.pop();
        }
        while(k--) {
            ans.push_back(points[pq.top().second]);
            pq.pop();
        }
        return ans;
    }
    
    bool cmp(pair<float,int> &p1, pair<float,int> &p2) {
        return (p1.first<p2.first);
    }
};