class Solution
{
    public:
    string rearrangeString(string str)
    {
        unordered_map<char,int> freqMap;
        for(char ch: str) {
            freqMap[ch]++;
        }
        priority_queue<pair<int,char>> pq;
        for(auto val: freqMap) {
            pq.push({val.second,val.first});
        }
        string res = "";
        while(pq.size()>1) {
            auto p1 = pq.top();
            pq.pop();
            auto p2 = pq.top();
            pq.pop();
            res += p1.second;
            res += p2.second;
            if(p1.first-1>0) {
                p1.first--;
                pq.push(p1);
            }
            if(p2.first-1>0) {
                p2.first--;
                pq.push(p2);
            }
        }
        if(pq.size()) {
            if(pq.top().first==1 || str.size()==1) {
                res += pq.top().second;
            }
            else {
                return "-1";
            }
        }
        return res;
    }
    
};