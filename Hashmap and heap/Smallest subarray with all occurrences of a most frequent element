class Solution{
    public:
    vector<int> smallestSubsegment(int a[], int n)
    {
        unordered_map<int,vector<int>> hmap;
        vector<int> res;
        int diff = INT_MAX;
        int maxFreq = INT_MIN;
        int st,end;
        for(int i=0;i<n;i++) {
            if(hmap.find(a[i])==hmap.end()) {
                hmap[a[i]] = {i,i,1};
            }
            else {
                hmap[a[i]][1] = i;
                hmap[a[i]][2]++;
            }
            if(hmap[a[i]][2]>=maxFreq) {
                if(hmap[a[i]][2]==maxFreq && hmap[a[i]][1]-hmap[a[i]][0]<diff)
                 {
                     diff = hmap[a[i]][1]-hmap[a[i]][0];
                     st = hmap[a[i]][0];
                     end = hmap[a[i]][1];
                 }
                 else if(hmap[a[i]][2]>maxFreq) {
                     diff = hmap[a[i]][1]-hmap[a[i]][0];
                     st = hmap[a[i]][0];
                     end = hmap[a[i]][1];
                     maxFreq = hmap[a[i]][2];
                 }
            }
        }
        for(int i=st;i<=end;i++) {
            res.push_back(a[i]);
        }
        return res;
    }
};