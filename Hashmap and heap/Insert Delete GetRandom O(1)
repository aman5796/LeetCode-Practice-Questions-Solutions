class RandomizedSet {
public:
    vector<int> arr;
    unordered_map<int,int> hmap;
    RandomizedSet() {
        // do nothing
    }
    
    bool insert(int val) {
        if(hmap.find(val)!=hmap.end()) return false;
        arr.push_back(val);
        hmap[val] = arr.size()-1;
        return true;
    }
    
    bool remove(int val) {
        if(hmap.find(val)==hmap.end()) return false;
        int last = arr.back();
        hmap[last]=hmap[val];
        arr[hmap[val]] = last;
        arr.pop_back();
        hmap.erase(val);
        return true;
    }
    
    int getRandom() {
        return arr[rand()%arr.size()];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */