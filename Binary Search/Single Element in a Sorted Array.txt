class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        if(nums.size()==1){
            return nums[0];
        }
        int left = 0;
        int right = nums.size()-1;
        while(left<=right) {
            int mid = left+((right-left)/2);
            if(mid==0 && nums[mid+1]!=nums[mid]) {
                return nums[mid];
            } else if(mid==nums.size()-1 && nums[mid-1]!=nums[mid]) {
                return nums[mid];
            } else if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1]){
                return nums[mid];
            } else if(mid%2==0 && nums[mid+1]!=nums[mid]) {
                right = mid-1;
            } else if(mid%2==0 && nums[mid+1]==nums[mid]) {
                left = mid+1;
            } else if(mid%2!=0 && nums[mid-1]==nums[mid]){
                left = mid+1;
            } else {
                right = mid-1;
            }
        }
        return -1;
    }
};