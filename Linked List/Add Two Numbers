/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head = new ListNode(0);
        ListNode* tail = head;
        int carry = 0;
        while(l1!=NULL || l2!=NULL || carry!=0) {
            int num1, num2;
            if(l1!=NULL) {
                num1 = l1->val;
                l1 = l1->next;
            }
            else {
                num1 = 0;
            }
            if(l2!=NULL) {
                num2 = l2->val;
                l2 = l2->next;
            }
            else {
                num2 = 0;
            }
            int sum = num1+num2+carry;
            tail->next = new ListNode(sum%10);
            tail = tail->next;
            carry = sum/10;
        }
        return head->next;
    }
};