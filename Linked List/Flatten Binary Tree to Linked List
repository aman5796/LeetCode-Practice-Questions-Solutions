/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* prev = NULL;
    void flatten(TreeNode* root) {
        prev = NULL;
        if(root!=NULL) {
            TreeNode* ptr = root;
            flatTree(ptr);
        }
    }
    
    void flatTree(TreeNode* root) {
        if(root!=NULL) {
            TreeNode* tempNode = root->right;
            root->right = root->left;
            root->left = tempNode;
            if(root->right!=NULL || root->left!=NULL) {
                if(prev!=NULL) {
                    prev->right = root;
                }
                prev = root;
                flatTree(root->right);
                flatTree(root->left);
                root->left=NULL;
            }
            else {
                if(prev!=NULL) {
                    prev->right = root;
                }
                prev = root;
            }
        }
    }
};