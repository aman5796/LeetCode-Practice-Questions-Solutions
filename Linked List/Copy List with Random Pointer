/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL) {
            return NULL;
        }
        Node* ptr = head;
        Node* newHead = NULL;
        bool isFirst = false;
        while(ptr!=NULL) {
            Node* newNode = new Node(ptr->val);
            if(!isFirst) {
                newHead = newNode;
                isFirst = true;
            }
            newNode->next = ptr->next;
            ptr->next = newNode;
            ptr = ptr->next->next;
        }
        ptr = head;
        while(ptr!=NULL) {
            ptr->next->random = (ptr->random!=NULL)?ptr->random->next:NULL;
            ptr = ptr->next->next;
        }
        ptr = head;
        Node* ptr2 = newHead;
        while(ptr!=NULL) {
            ptr->next = (ptr->next!=NULL)?ptr->next->next:NULL;
            ptr2->next = (ptr2->next!=NULL)?ptr2->next->next:NULL;
            ptr = ptr->next;
            ptr2 = ptr2->next;
        }
        return newHead;
    }
};