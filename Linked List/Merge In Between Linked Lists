/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        if(list1==NULL || list2==NULL) {
            return NULL;
        }
        ListNode* lastNode = list2;
        while(lastNode->next!=NULL) {
            lastNode = lastNode->next;
        }
        int cnt = 0;
        ListNode* res = list1;
        ListNode* aref = NULL;
        ListNode* bref = NULL;
        while(cnt<=b+1) {
            if(cnt==a-1) {
                aref = list1;
            }
            else if(cnt==b+1) {
                bref = list1;  
            }
            list1 = list1->next;
            cnt++;
        }
        aref->next = list2;
        lastNode->next = bref;
        return res;
    }
};