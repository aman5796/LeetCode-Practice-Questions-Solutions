class Solution {
public:
    vector<vector<int>> res;
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        res.clear();
        generateCombination(candidates,target,vector<int>{},0,0);
        return res;
    }
    
    void generateCombination(vector<int>& candidates, int target, vector<int> arr, int sum, int index) {
        if(sum==target && index<candidates.size()) {
            res.push_back(arr);
        }
        else if(sum<target && index<candidates.size()) {
            for(int i=index;i<candidates.size();i++) {
                if(sum+candidates[i]<=target) {
                    arr.push_back(candidates[i]);
                    generateCombination(candidates,target,arr,sum+candidates[i],i);
                    arr.pop_back();
                }
            }
        }
    }
};